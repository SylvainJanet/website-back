server.port = 4040
			  #4040
#configuration de la datasource
spring.sql.init.mode=always
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3308/mywebsite?useSSL=false&useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
   
spring.datasource.username=root
spring.datasource.password= 

#config de JPA/Hibernate
#dialect : classe permettant de traduire les req vers le SQL spécifique au SGBD utilisé
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
                                       #org.hibernate.dialect.PostgreSQL9Dialect
                                       #org.hibernate.dialect.MariaDBDialect

#Stratégie utilisée pour générer les tables en Bdd
spring.jpa.hibernate.ddl-auto=update


#config des logs
#TODO : mettre à false en production
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.generate_statistics=false


#Loggers
logging.level.org.springframework.web=info
logging.level.org.springframework.core=info
logging.level.org.springframework.beans=info
logging.level.org.springframework.context=info

logging.level.org.hibernate=info
logging.level.org.hibernate.SQL=info
logging.level.org.hibernate.type=info
logging.level.org.hibernate.tool.hbm2ddl=info
logging.level.org.hibernate.jdbc=info
logging.level.org.hibernate.transaction=info
logging.level.org.hibernate.cache=info

logging.level.fr.dawan.job*=debug

#Monitoring du service
#en ajoutant Spring Actuator, voir dependency dans le pom.xml
#management.server.port=8090
#management.endpoints.web.exposure.include=*
#actuator vous définira les URLs accessibles ici : http://localhost:8080/actuator

#Forcer l'utilisation des noms d'attributs ds la base tels qu'ils sont ds les Entités
	#spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

spring.mvc.static-path-pattern=/shared/**
#app.storagefolder=C:/files/
spring.web.resources.static-locations=file:///C:/files/


### MULTIPART (MultipartProperties)
## Enable multipart uploads
#spring.servlet.multipart.enabled=true
## Threshold after which files are written to disk.
#spring.servlet.multipart.file-size-threshold=2KB
## Max file size.
#spring.servlet.multipart.max-file-size=25MB
## Max Request Size
#spring.servlet.multipart.max-request-size=215MB
#
#server.servlet.encoding.force=true

#jwt.secret=${JWT_SECRET_KEY}
#		   #myapisecretkey123DenisAlfouSylvainBestTeamEverRIPAser
#jwt.get.token.uri=${JWT_GET_TOKEN_URI}

# to have error message in response
server.error.include-message=always

#spring.mvc.throws-exception-if-no-handler-found=true
spring.jpa.properties.hibernate.order_by.default_null_ordering=last

#webdriver.chrome.driver=${WEBDRIVER_CHROME}